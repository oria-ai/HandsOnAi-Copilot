6. Execution_Plan.mdVersion: 1.0Date: July 9, 2024Phases, Tasks, and EstimatesPhase 1: Backend & Database Overhaul (Est: 3-4 days)Tasks:Replace Prisma Schema: Replace the content of /server/prisma/schema.prisma with the final version from 4. Detailed_Technical_Design.md.Reset and Migrate Database: Delete the old dev.db file and run npx prisma migrate dev --name "implement-full-schema" from the /server directory.Refactor Backend Server: Rewrite /server/src/index.ts to implement a modular structure (auth, users, content, events).Implement Authentication: Create /api/v1/auth/login and /api/v1/auth/register endpoints.Build Core Endpoints: Implement the GET /api/v1/steps/{stepId} endpoint with full variant resolution logic, and the POST /api/v1/events endpoint for analytics.Seed Database: Update and run /server/scripts/seed.ts to populate all new tables with comprehensive test data.Deliverable: A fully functional backend API that can serve personalized content and log events.Phase 2: Frontend Refactoring (Est: 5-7 days)Tasks:Create API Library: Implement /src/lib/api.ts with a client (e.g., axios) that automatically attaches the user's JWT to all requests.Refactor ModuleView.tsx: Remove all hardcoded data. Use a custom hook to fetch all data from the new backend API. The UI must render dynamically based on the API response structure.Create Generic Task Components: Break down ClickTutor.tsx, PromptTask.tsx, etc., into smaller, reusable components that receive all their data via props.Implement Analytics: Wrap the app in an AnalyticsProvider. Instrument all relevant user actions (video plays, button clicks, screen views) to send data to the /api/v1/events endpoint.Deliverable: A learner view that is fully driven by the backend API.Phase 3: Admin & Authoring MVP (Est: 4-5 days)Tasks:Build Manager Dashboard: Create the UI and connect it to new backend endpoints that provide aggregated analytics data.Build Content Assignment UI: Implement the manager's interface for assigning modules to departments.Build Authoring View: Create the base UI for authors to view and edit steps. Implement the variant selection dropdowns.Implement Authoring API: Build the CREATE, UPDATE, and DELETE endpoints for all content entities.Deliverable: A functional interface for managers and authors to perform their core tasks.Critical PathThe most significant dependency is the backend's content personalization and variant resolution service. The frontend cannot be meaningfully refactored until the API endpoint that serves this structured, personalized data is complete and reliable. This task must be the top priority of Phase 1.